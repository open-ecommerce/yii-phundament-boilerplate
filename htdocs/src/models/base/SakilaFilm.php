<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;

/**
 * This is the base-model class for table "sakila_film".
 *
 * @property integer $film_id
 * @property string $title
 * @property string $description
 * @property string $release_year
 * @property integer $language_id
 * @property integer $original_language_id
 * @property integer $rental_duration
 * @property string $rental_rate
 * @property integer $length
 * @property string $replacement_cost
 * @property string $rating
 * @property string $special_features
 * @property string $last_update
 *
 * @property \app\models\SakilaLanguage $language
 * @property \app\models\SakilaLanguage $originalLanguage
 * @property \app\models\SakilaFilmActor[] $sakilaFilmActors
 * @property \app\models\SakilaActor[] $actors
 * @property \app\models\SakilaFilmCategory[] $sakilaFilmCategories
 * @property \app\models\SakilaCategory[] $categories
 * @property \app\models\SakilaInventory[] $sakilaInventories
 * @property string $aliasModel
 */
abstract class SakilaFilm extends \yii\db\ActiveRecord
{



    /**
    * ENUM field values
    */
    const RATING_G = 'G';
    const RATING_PG = 'PG';
    const RATING_PG_13 = 'PG-13';
    const RATING_R = 'R';
    const RATING_NC_17 = 'NC-17';
    var $enum_labels = false;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'sakila_film';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title', 'language_id'], 'required'],
            [['description', 'rating', 'special_features'], 'string'],
            [['release_year', 'last_update'], 'safe'],
            [['language_id', 'original_language_id', 'rental_duration', 'length'], 'integer'],
            [['rental_rate', 'replacement_cost'], 'number'],
            [['title'], 'string', 'max' => 255],
            [['language_id'], 'exist', 'skipOnError' => true, 'targetClass' => SakilaLanguage::className(), 'targetAttribute' => ['language_id' => 'language_id']],
            [['original_language_id'], 'exist', 'skipOnError' => true, 'targetClass' => SakilaLanguage::className(), 'targetAttribute' => ['original_language_id' => 'language_id']],
            ['rating', 'in', 'range' => [
                    self::RATING_G,
                    self::RATING_PG,
                    self::RATING_PG_13,
                    self::RATING_R,
                    self::RATING_NC_17,
                ]
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'film_id' => Yii::t('app', 'Film ID'),
            'title' => Yii::t('app', 'Title'),
            'description' => Yii::t('app', 'Description'),
            'release_year' => Yii::t('app', 'Release Year'),
            'language_id' => Yii::t('app', 'Language ID'),
            'original_language_id' => Yii::t('app', 'Original Language ID'),
            'rental_duration' => Yii::t('app', 'Rental Duration'),
            'rental_rate' => Yii::t('app', 'Rental Rate'),
            'length' => Yii::t('app', 'Length'),
            'replacement_cost' => Yii::t('app', 'Replacement Cost'),
            'rating' => Yii::t('app', 'Rating'),
            'special_features' => Yii::t('app', 'Special Features'),
            'last_update' => Yii::t('app', 'Last Update'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getLanguage()
    {
        return $this->hasOne(\app\models\SakilaLanguage::className(), ['language_id' => 'language_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getOriginalLanguage()
    {
        return $this->hasOne(\app\models\SakilaLanguage::className(), ['language_id' => 'original_language_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSakilaFilmActors()
    {
        return $this->hasMany(\app\models\SakilaFilmActor::className(), ['film_id' => 'film_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getActors()
    {
        return $this->hasMany(\app\models\SakilaActor::className(), ['actor_id' => 'actor_id'])->viaTable('sakila_film_actor', ['film_id' => 'film_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSakilaFilmCategories()
    {
        return $this->hasMany(\app\models\SakilaFilmCategory::className(), ['film_id' => 'film_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCategories()
    {
        return $this->hasMany(\app\models\SakilaCategory::className(), ['category_id' => 'category_id'])->viaTable('sakila_film_category', ['film_id' => 'film_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSakilaInventories()
    {
        return $this->hasMany(\app\models\SakilaInventory::className(), ['film_id' => 'film_id']);
    }


    
    /**
     * @inheritdoc
     * @return SakilaFilmQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \app\models\SakilaFilmQuery(get_called_class());
    }


    /**
     * get column rating enum value label
     * @param string $value
     * @return string
     */
    public static function getRatingValueLabel($value){
        $labels = self::optsRating();
        if(isset($labels[$value])){
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column rating ENUM value labels
     * @return array
     */
    public static function optsRating()
    {
        return [
            self::RATING_G => Yii::t('app', self::RATING_G),
            self::RATING_PG => Yii::t('app', self::RATING_PG),
            self::RATING_PG_13 => Yii::t('app', self::RATING_PG_13),
            self::RATING_R => Yii::t('app', self::RATING_R),
            self::RATING_NC_17 => Yii::t('app', self::RATING_NC_17),
        ];
    }

}
